{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport firebaseConfig from './firebase.config.js';\nexport const initialzeLoginFramework = () => {\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n};\nexport const handleGoogleSignIn = () => {\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithPopup(googleProvider).then(res => {\n    console.log(res);\n    const {\n      email,\n      name,\n      picture\n    } = res.additionalUserInfo.profile;\n    const signnedInUser = {\n      isSignnedIn: true,\n      name: name,\n      email: email,\n      photo: picture,\n      success: true\n    };\n    return signnedInUser;\n    console.log(email, name, picture);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleFbSignIn = () => {\n  const fbProvider = new firebase.auth.FacebookAuthProvider();\n  return firebase.auth().signInWithPopup(fbProvider).then(result => {\n    /** @type {firebase.auth.OAuthCredential} */\n    var credential = result.credential;\n\n    // The signed-in user info.\n    var user = result.user;\n    user.success = true;\n    return user;\n    // IdP data available in result.additionalUserInfo.profile.\n    // ...\n\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    var accessToken = credential.accessToken;\n\n    // ...\n  }).catch(error => {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // The email of the user's account used.\n    var email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    var credential = error.credential;\n\n    // ...\n  });\n};\n\nexport const handleSignOut = () => {\n  return firebase.auth().signOut().then(res => {\n    const signedOutUser = {\n      isSignnedIn: false,\n      name: '',\n      photo: '',\n      email: '',\n      error: '',\n      success: false\n    };\n    return signedOutUser;\n    console.log(res);\n  }).catch(err => {});\n};\nexport const createUserWithEmailAndPassword = (name, email, password) => {\n  return firebase.auth().createUserWithEmailAndPassword(email, password).then(res => {\n    const newUserInfo = res.user;\n    newUserInfo.error = \"\";\n    newUserInfo.success = true;\n    //console.log(res);\n    updateUserName(name);\n    return newUserInfo;\n  }).catch(error => {\n    const newUserInfo = {};\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    var errorMessage = error.message;\n    console.log(errorMessage);\n    return newUserInfo;\n  });\n};\nexport const signInWithEmailAndPassword = (email, password) => {\n  return firebase.auth().signInWithEmailAndPassword(email, password).then(res => {\n    const newUserInfo = {\n      ...user\n    };\n    newUserInfo.error = \"\";\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    setLoggedInUser(newUserInfo);\n    history.replace(from);\n    console.log(\"Sign in user info\", res.user);\n  }).catch(error => {\n    const newUserInfo = {\n      ...user\n    };\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n  });\n};\nconst updateUserName = name => {\n  const user = firebase.auth().currentUser;\n  user.updateProfile({\n    displayName: name\n  }).then(() => {\n    console.log(\"User name updated successfully!\");\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"names":["firebase","firebaseConfig","initialzeLoginFramework","apps","length","initializeApp","handleGoogleSignIn","googleProvider","auth","GoogleAuthProvider","signInWithPopup","then","res","console","log","email","name","picture","additionalUserInfo","profile","signnedInUser","isSignnedIn","photo","success","catch","err","message","handleFbSignIn","fbProvider","FacebookAuthProvider","result","credential","user","accessToken","error","errorCode","code","errorMessage","handleSignOut","signOut","signedOutUser","createUserWithEmailAndPassword","password","newUserInfo","updateUserName","signInWithEmailAndPassword","setUser","setLoggedInUser","history","replace","from","currentUser","updateProfile","displayName"],"sources":["F:/web development/web development/course web development/practise/module 34 (ema-john project with firebase)/ema-john-simple firebase/src/components/Login/loginManager.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport firebaseConfig from './firebase.config.js';\r\n\r\n\r\nexport const initialzeLoginFramework = () => {\r\n    if (firebase.apps.length ===0){\r\n        firebase.initializeApp(firebaseConfig);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const handleGoogleSignIn= ()=> {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n    \r\n    .then(res => {   \r\n    console.log(res);\r\n    const {email,name,picture}= res.additionalUserInfo.profile\r\n    const signnedInUser = {\r\n        isSignnedIn : true,\r\n        name: name,\r\n        email: email,\r\n        photo: picture,\r\n        success: true,\r\n    }\r\n    return signnedInUser;\r\n    console.log(email, name, picture);\r\n    })\r\n    .catch (err => {\r\n    console.log(err);\r\n    console.log(err.message);\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const handleFbSignIn = () =>{\r\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n    return firebase\r\n    .auth()\r\n    .signInWithPopup(fbProvider)\r\n    .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        user.success=true;\r\n        return user;\r\n        // IdP data available in result.additionalUserInfo.profile.\r\n        // ...\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n    })\r\n    .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n    });\r\n\r\n\r\n}\r\n\r\nexport const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n    .then (res => {\r\n        const signedOutUser = {\r\n            isSignnedIn: false,\r\n            name: '',\r\n            photo: '',\r\n            email:'',\r\n            error:'',\r\n            success: false,\r\n        }\r\n        return signedOutUser;\r\n        console.log(res);\r\n    })\r\n    .catch(err => {\r\n\r\n    })\r\n}\r\n\r\n\r\nexport const createUserWithEmailAndPassword = (name, email, password) => {\r\n\r\n   return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n                .then (res => {\r\n                const newUserInfo = res.user;\r\n                newUserInfo.error=\"\";\r\n                newUserInfo.success = true;\r\n                //console.log(res);\r\n                updateUserName(name);\r\n                return newUserInfo\r\n            })\r\n            .catch(error => {\r\n                const newUserInfo= {};\r\n                newUserInfo.error = error.message;\r\n                newUserInfo.success = false;\r\n                var errorMessage = error.message;\r\n                console.log(errorMessage);\r\n                return newUserInfo;\r\n            });\r\n}\r\n\r\n\r\nexport const signInWithEmailAndPassword=(email,password) => {\r\n\r\n   return firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then (res => {\r\n        const newUserInfo = {...user};\r\n        newUserInfo.error=\"\";\r\n        newUserInfo.success = true;\r\n        setUser(newUserInfo);\r\n        setLoggedInUser(newUserInfo);\r\n        history.replace(from);\r\n        console.log(\"Sign in user info\",res.user);\r\n    })\r\n    .catch((error) => {\r\n        const newUserInfo= {...user};\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        setUser(newUserInfo);\r\n    });\r\n\r\n}\r\n\r\nconst updateUserName= name => {\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n            user.updateProfile({\r\n            displayName: name\r\n            }).then(() => {\r\n            console.log(\"User name updated successfully!\")\r\n            }).catch((error) => {\r\n            console.log(error)\r\n            });  \r\n\r\n}\r\n \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}